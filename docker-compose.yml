services:
  redis:
    image: redis:7.2
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    env_file:
      - .env
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - app-tier
  db:
    image: mysql:8.0.36
    container_name: db
    command: --init-file /data/application/init.sql
    restart: always
    env_file:
      - .env
    volumes:
      - my-db:/var/lib/mysql
      - ./database/init.sql:/data/application/init.sql
    networks:
      - app-tier
  bot:
    environment:
      - IS_DOCKER=true
    build: .
    container_name: bot
    command: bash -c "alembic upgrade head && alembic revision --autogenerate && alembic upgrade head && python start_bot.py"
    env_file:
      - .env
    restart: always
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - app-tier
  webhook:
    build:
      context: .
      dockerfile: Dockerfile.webhook
    container_name: webhook
    env_file:
      - .env
    ports:
      - "8080:8000"
    depends_on:
      - bot
    networks:
      - app-tier
  subscribe_checker:
    build:
      context: .
    container_name: subscribe_checker
    command: bash -c "PYTHONPATH=/app python3 services/subscribe_checker.py"
    env_file:
      - .env
    depends_on:
      - bot
    networks:
      - app-tier
volumes:
  my-db:
networks:
  app-tier:
    driver: bridge




